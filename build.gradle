plugins {
	id 'application'
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.1.0'
}

allprojects {
	apply {
		plugin 'java'
		plugin 'io.spring.dependency-management'
		plugin 'org.springframework.boot'
	}
	group = 'org.document'
	version = '0.0.1-SNAPSHOT'

	java {
		sourceCompatibility = 1.8
		targetCompatibility = 1.8
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation 'org.springframework.boot:spring-boot-starter-jdbc'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		//lombok
		implementation 'org.projectlombok:lombok:1.18.28'
		annotationProcessor 'org.projectlombok:lombok:1.18.28'
		testCompileOnly 'org.projectlombok:lombok:1.18.28'
		testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'

		//postgres
		implementation 'org.postgresql:postgresql:42.5.4'

		//swagger
		implementation 'org.springdoc:springdoc-openapi-ui:1.6.15'
		implementation 'org.springdoc:springdoc-openapi-kotlin:1.6.15'

		//javax
		implementation 'javax.json:javax.json-api:1.1.4'

		// object mapper
    	implementation 'org.modelmapper:modelmapper:3.1.1'

//		testImplementation project(":")
		//test dependencies
		testImplementation 'org.springframework.boot:spring-boot-starter-test'

		testImplementation 'org.junit.jupiter:junit-jupiter-api'
		testImplementation 'org.junit.jupiter:junit-jupiter-params'

		testImplementation 'org.mockito:mockito-junit-jupiter'
		testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
		testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	}


	sourceSets {
		main {
			java {
				srcDir 'src/main/java'
			}
			resources {
				srcDir 'src/main/resources'
			}
		}
		test {
			java {
				srcDir 'src/main/java'
			}
			resources {
				srcDir 'src/main/resources'
			}
		}
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

application {
	mainClassName = "org.document.inventory.InventoryApp"
}


processResources {
	duplicatesStrategy = 'include' // or 'exclude' or 'fail'
	// other configurations...
}

dependencies {
	// common module
	implementation project(':common')
	// category module
	implementation project(':category')
	// product module
	implementation project(':product')
	// user module
	implementation project(':user')
}



